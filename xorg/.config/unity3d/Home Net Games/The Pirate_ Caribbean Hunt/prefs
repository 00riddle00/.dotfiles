<unity_prefs version_major="1" version_minor="1">
	<pref name="CloudSave_FirstTime" type="string">MjAxOS0xMi0wN1QyMTowMjozNA==</pref>
	<pref name="GamesPromoConfig_12" type="string"></pref>
	<pref name="KQoULy8bEwcRJ11UUA==" type="string">YzFSQ1ptdFlRRjVFWXoxZlZGSmVWVXBhUmc4Q0FPd2lnN009</pref>
	<pref name="LA8OHBAgBAMEAVBmc1FBR0Y8BwoV" type="string">ZGxGWVZWUmpWMXBSUlRCdGQxTkNRVTVuWFE4Q0FPd2lnN009</pref>
	<pref name="Language" type="string">RU4=</pref>
	<pref name="LastSystemLanguageID" type="string">RU4=</pref>
	<pref name="Lw8KFSodDxIMFA==" type="string"></pref>
	<pref name="MUI_data2" type="string">MTExMTEwMTAwMDEwMTAxMTExMDAwMDEwMXwxeDF4MXgxeDF4MXgxeDAuNXgwLjV4MXgxeDAuNnww</pref>
	<pref name="Screenmanager Is Fullscreen mode" type="int">1</pref>
	<pref name="Screenmanager Resolution Height" type="int">1080</pref>
	<pref name="Screenmanager Resolution Width" type="int">1920</pref>
	<pref name="UnityGraphicsQuality" type="int">4</pref>
	<pref name="UnitySelectMonitor" type="int">0</pref>
	<pref name="locEN_available" type="int">1</pref>
	<pref name="locEN_syschecked" type="int">1</pref>
	<pref name="unity.cloud_userid" type="string">ZDJiNDM0ZWY3Y2U4MjRjNjNhYjNjZjkyNjQ4ZDhhOTI=</pref>
	<pref name="unity.player_session_count" type="string">MQ==</pref>
	<pref name="unity.player_sessionid" type="string">Mzg3MDQ4Mzc0NTQ3MDg1NTI4NQ==</pref>
</unity_prefs>