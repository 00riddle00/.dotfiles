import random
from sys import exit


#@CLASSES


class Character(object):

    def __init__(self, name):
        self.name = name
        self.strength = 0 
        self.intelligence = 0
        #self.description
        #self.strength
        #self.intelligence

    def info(self):
        print "\n", self.name, "\nName:", playername[0], "\n\nStrength:", self.strength, "\nIntelligence:", self.intelligence
        print self.description, "\n"








class Notifs(object):

    def __init__(self, char, player):
        self.char = char
        self.player = player

    def congrats(self):
        
        self.sp = self.player + ", congratulations, you have chosen"

        if self.char == 'scout':
            print self.sp, "Pecheneg Scout!"
        if self.char == "merchant":
            print self.sp, "Swedish Merchant!"
        if self.char == "sage":
            print self.sp, "Kiev Sage!"
        if self.char == "viking":
            print self.sp, "Visitant Viking!"
        if self.char == "archer":
            print self.sp, "Chernigov Archer!"
        if self.char == "witch":
            print self.sp, "Steppe Witch-doctor!"

        self.manual1 = ("\nPress \"info\" to read character's description\nPress \"inv\" to check your inventory"
                "\nPress \"map\" to view map"
                "\nPress \"continue\" to continue the game")

        print self.manual1        








class Field(object):

    def __init__(self, name):
        self.name = name
       
    def entrance(self):
        #self.howmuch = howmuch
        #self.margin = margin
        
        #self.additional
        print "\nWelcome to", self.name, "\b!\n"
        print "Entrance: dice +", self.howmuch, "at least", self.margin, self.additional


        dice()
        
        # scout is used as an example for now
        self.m1 = m + scout.intelligence
        #m1 = charater's attribute(either strength or intelligence) + dice(m)
        if self.m1 >= self.margin:
            print "You have entered", self.name, "\b!"
            self.entered = True
            print self.description
        else:
            print "You did not succeed. Wait until the next turn."
            self.entered = False
   


class Map(object):
    
    def buildmap(self):
        
        if player4 == False:
            if player3 == False:
                self.map = "16(4x4)"
            else:
                self.map = "20(4x5)"
        else:
            self.map = "25(5x5)"
            
            




#@OBJECTS

scout = Character("Pecheneg Scout")
merchant = Character("Swedish Merchant")
sage = Character("Kiev Sage")
viking = Character("Visitant Viking")
archer = Character("Chernigov Archer")
witch = Character("Steppe Witch-doctor")





#@FUNCTIONS


def dice_loop():
    
    i = 1

    while i < 7:
      
       print "\r%d" % i,
        
       i += 1
    

def dice(): 
    global m 
    raw_input("Roll a dice(Enter) > ")

    for i in range(1,50000):
        dice_loop()
    i = random.randint(1,6)
    print "\r%d" %i 
    m = i
    return m

def characters_description():
    print ''' 

Charater descriptions: character_descriptions.py (import later)

    '''


def eile(nr):
    global playername
    playername = []
    
    if nr == 1:
        playername = [player1]
    if nr == 2:
        playername = [player2]
    if nr == 3:
        playername = [player3]
    if nr == 4:
        playername = [player4]
    if nr == 11:
        playername = playername1
    if nr == 12:
        playername = playername2
    if nr == 13 and player3:
        playername = playername3
    if nr == 14 and player4:
        playername = playername4




    return playername    




def intro():
    
    global player1, player2, player3, player4
    global player_nr

    print "Welcome to The Treacherous Forest!"

    print "How many people are playing?"



    player_nr = input("> ")

    while player_nr not in range(2,5):
        print "The number of players should be from 2 to 4!"
        player_nr = input("> ")


    if player_nr == 2:
        player1 = raw_input("Blue player> ")
        player2 = raw_input("Green player> ")
        player3 = False
        player4 = False
    elif player_nr == 3:
        player1 = raw_input("Blue player> ")
        player2 = raw_input("Green player> ")
        player3 = raw_input("Red player> ")
        player4 = False
    else:
        player1 = raw_input("Blue player> ")
        player2 = raw_input("Green player> ")
        player3 = raw_input("Red player> ")
        player4 = raw_input("Yellow player> ")
    
    #print the list of players
    print "\nPlayer(1):", player1, "\nPlayer(2):", player2
    if player3:
        print "Player(3):", player3
    if player4: 
        print "Player(4):", player4



   
    proceed = raw_input("\nContinue(y/n)? ") 

    if proceed == "y" or proceed == "Y" or proceed == "yes" or proceed == "Yes":
        print "\nGood luck!\n"
    else:
        exit(1)








class Choosing(object):

    
    def __init__(self):
        self.p1 = 1
        self.p2 = 1
        self.p3 = 1
        self.p4 = 1
        self.p5 = 1
        self.p6 = 1


    def choosing(self):
    
        if playername[0] == player1:
            print "\nBlue player(" + player1, "\b): choose your character!"
        if playername[0] == player2:
            print "\nGreen player(" + player2, "\b): choose your character!"
        if playername[0] == player3:
            print "\nRed player(" + player3, "\b): choose your character!"
        if playername[0] == player4:
            print "\nYellow player(" + player4, "\b): choose your character!"
    
    
    
        print '''
1.Pecheneg Scout
2.Swedish Merchant
3.Kiev Sage
4.Visitant Viking
5.Chernigov Archer
6.Steppe Witch-doctor

Detailed description(d)

'''

        choice = raw_input("> ")


        if choice == "d" or choice == "D":
            characters_description()
            raw_input("(Continue?) > ")
            self.choosing()



        if choice == "1" or choice == "scout" or choice == "Scout":
            if self.p1 == 1:
               
                playername.append('scout')
                
                scout.strength += 3 
                scout.intelligence += 3
                
                
                scout.description = ('''
                \n+1 with Citizens\n-1 with Monsters
                \nAbility to hire any fellow traveler for 1 item
                ''')
                scoutnotifs = Notifs("scout", playername[0])
                scoutnotifs.congrats()
       

                self.p1 += 1


            else:
                print "Pecheneg Scout is already taken!\n", 20 * "_"
                self.choosing()
            
        

       

        if choice == "2" or choice == "merchant" or choice == "Merchant":
            if self.p2 == 1:
                
                playername.append('merchant') 
                
                merchant.strength += 3
                merchant.intelligence += 3

                merchant.description = ('''
                \n+1 with Citizens\n-1 with Undead
                \nThe Translator is hired for free
                ''')

                
                merchantnotifs = Notifs("merchant", playername[0])
                merchantnotifs.congrats()



                self.p2 += 1


            else:
                print "Swedish Merchant is already taken!\n", 20 * "_"

                self.choosing()
 
 
        if choice == "3" or choice == "sage" or choice == "Sage":
            if self.p3 == 1:
                playername.append('sage')

                sage.strength += 2
                sage.intelligence += 4

                sage.description = ('''
                \n +1 with Wizards\n-1 with Water Creatures 
                \nFortune-teller is hired for free
                ''')


                sagenotifs = Notifs("sage", playername[0])
                sagenotifs.congrats()

                self.p3 += 1

            else:
                print "Kiev Sage is already taken!\n", 20 * "_"

                self.choosing()
 

        if choice == "4" or choice == "viking" or choice == "Viking":
            if self.p4 == 1:

                playername.append('viking')

                viking.strength += 4
                viking.intelligence += 2

                viking.description = ('''
                \n-1 with Wizards
                \nEx-convict is hired for free
                ''')


                vikingnotifs = Notifs("viking", playername[0])
                vikingnotifs.congrats()
 
                self.p4 += 1

            else:
                print "Visiting Viking is already taken!", 20 * "_"
 
                self.choosing()
 

        if choice == "5" or choice == "archer" or choice == "Archer":
            if self.p5 == 1:


                playername.append('archer')

                archer.strength += 3
                archer.intelligence += 3

                archer.description = ('''
                \n+1 with Bandits\n-1 with Undead
                \nWarrior is hired for free
                ''')

                lanknotifs = Notifs("archer", playername[0])
                lanknotifs.congrats()
 
                self.p5 += 1

            else:
                print "Chernigov Archer is already taken!\n", 20 * "_"
                self.choosing()
 

        if choice == "6" or choice == "witch" or choice == "Witch":
            if self.p6 == 1:

                playername.append('witch')

                witch.strength += 2
                witch.intelligence += 4

                witch.description = ('''
   
                \nSorcerer is hired for free
                ''')
                
                witchnotifs = Notifs("witch", playername[0])
                witchnotifs.congrats()

                self.p6 += 1

            else:
                print "Steppe Witch-doctor is already taken!\n", 20 * "_"
                choosing()
 





def accessible(): 
    if action == "info": 
        if playername[1] == 'scout':
            scout.info()
        if playername[1] == 'merchant':
            merchant.info()
        if playername[1] == 'sage':
            sage.info()
        if playername[1] == 'viking':
            viking.info()
        if playername[1] == 'archer':
            archer.info()
        if playername[1] == 'witch':
            witch.info()



        else:
            return(False)
    
    
    if action == "inv" or action == "i":
        print "\nYour inventory: \n\n"
    if action == "map":
        print'''

MAP


            A       B       C       D
        _________________________________ 
    1   |       |       |       |       |
        |       |       |       |       |
        _________________________________
    2   |       |       |       |       |
        |       |       |       |       |
        _________________________________
    3   |       |       |       |       |
        |       |       |       |       |
        _________________________________
    4   |       |       |       |       |
        |       |       |       |       |
        _________________________________
   

'''
    
    else:
        return(False)









def prompt():
    global action
    action = raw_input("> ")
    accessible() 
    if action == "continue":
        return(False)
    else: 
        prompt()



def choices():

    eile(1)
    choose = Choosing()
    
    
    choose.choosing()
    prompt()
    
    global playername1
    playername1 = playername[:]

    eile(2)
    choose.choosing()
    prompt()

    global playername2
    playername2 = playername[:]
    

    if player3:
        eile(3)
        choose.choosing()
    else:
        return (False)

    if player3:
        global playername3
        playername3 = playername[:]


    prompt()
    

    if player4:
        eile(4)
        choose.choosing()
    else:
        return (False)

    if player4:
        global playername4
        playername4 = playername[:]


    prompt()

    return playername1, playername2, playername3, playername4















intro()

game_map = Map()

game_map.buildmap()

choices()


print "\nGame continues..."
