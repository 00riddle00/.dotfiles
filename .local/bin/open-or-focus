#!/usr/bin/env bash
# vim:ft=bash:tw=79
#------------------------------------------------------------------------------
# Author: 00riddle00 (Tomas Giedraitis)
# Date:   2024-04-05 21:09:12 EEST
# Path:   ~/.local/bin/open-or-focus
# URL:    https://github.com/00riddle00/dotfiles
#------------------------------------------------------------------------------
#*
# TODO Add description.
# TODO Make it work with USAGE script.
# TODO Add description on OPTIONS.
#
# USAGE:
#     $0 brave
#     $0 brave --focus
#     $0 qalculate-gtk -n qalculate
#     $0 qalculate-gtk --exact --name 'Qalculate!'
#     $0 qalculate-gtk -e -f 'Qalculate!'
#     $0 pycharm --class jetbrains-pycharm
#     $0 thunar -c -e 'thunar.Thunar'
#
# Last checked with:
# wmctrl v1.07
#**

POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
    case $1 in
        -c|--class)
            WIN_CLASS="$2"
            shift
            shift
            ;;
        -e|--exact)
            EXACT=true
            shift
            ;;
        -f|--focus)
            FOCUS=true
            shift
            ;;
        -n|--name)
            WIN_NAME="$2"
            shift
            shift
            ;;
        -*|--*)
            echo "Unknown option $1"
            exit 1
            ;;
        *)
            POSITIONAL_ARGS+=("$1")
            shift
            ;;
    esac
done

set -- "${POSITIONAL_ARGS[@]}"

if [[ -z "$1" ]]; then
    echo "No command to launch a program provided."
    exit 1
fi

COMMAND="${1}"

if [[ -z "${WIN_NAME}" && -z "${WIN_CLASS}" ]]; then
    WIN_NAME="${1}"
fi

# TODO simplify this code with so much repetitions in conditionals by putting
# wmctrl flags into variables.
if [[ -n "${FOCUS}" ]]; then
    if [[ -n "${WIN_CLASS}" ]]; then
        if [[ -n "${EXACT}" ]]; then
            # Raise and focus window by class (exact match). If no such window
            # is found, just do nothing.
            wmctrl -F -x -a "${WIN_CLASS}"
        else
            # Raise and focus window by class (fuzzy match). If no such window
            # is found, just do nothing.
            wmctrl -x -a "${WIN_CLASS}"
        fi
    else
        if [[ -n "${EXACT}" ]]; then
            # Raise and focus window by name (title) (exact match). If no such
            # window is found, just do nothing.
            wmctrl -F -a "${WIN_NAME}"
        else
            # Raise and focus window by name (title) (fuzzy match). If no such
            # window is found, just do nothing.
            wmctrl -a "${WIN_NAME}"
        fi
    fi
elif [[ -n "${EXACT}" ]]; then
    if [[ -n "${WIN_CLASS}" ]]; then
        if wmctrl -l -x | awk '{print $3}' | grep -q "^${WIN_CLASS}$"; then
            # Window by class found (exact match), raise and focus it.
            wmctrl -F -x -a "${WIN_CLASS}"
        else
            # No window found, launch the program.
            "${COMMAND}"
        fi
    else
        if wmctrl -l | tr -s ' ' | cut -d ' ' -f4- | grep -q "^${WIN_NAME}$" ; then
            # Window by name (title) found (exact match), raise and focus it.
            wmctrl -F -a "${WIN_NAME}"
        else
            # No window found, launch the program.
            "${COMMAND}"
        fi
    fi
else
    if [[ -n "${WIN_CLASS}" ]]; then
        if wmctrl -l -x | awk '{print $3}' | grep -iq "${WIN_CLASS}"; then
            # Window by class found (fuzzy match), raise and focus it.
            wmctrl -x -a "${WIN_CLASS}"
        else
            # No window found, launch the program.
            "${COMMAND}"
        fi
    else
        if wmctrl -l | tr -s ' ' | cut -d ' ' -f4- | grep -iq "${WIN_NAME}" ; then
            # Window by name (title) found (fuzzy match), raise and focus it.
            wmctrl -a "${WIN_NAME}"
        else
            # No window found, launch the program.
            "${COMMAND}"
        fi
    fi
fi
