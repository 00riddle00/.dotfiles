#!/usr/bin/env bash

set -a

AUDIO_HIGH_SYMBOL=' '

AUDIO_MED_THRESH=60
AUDIO_MED_SYMBOL='墳 '

AUDIO_LOW_THRESH=30
AUDIO_LOW_SYMBOL=' '

AUDIO_ZERO_THRESH=0
AUDIO_ZERO_SYMBOL='  '

AUDIO_MUTED_SYMBOL='婢  '

FORMAT_NORMAL='${SYMB} ${VOL}% [${INDEX}:${NAME}]'
FORMAT_MUTED='${SYMB} [${INDEX}:${NAME}]'

SUBSCRIBE=1

MIXER="default"
if amixer -D pulse info >/dev/null 2>&1 ; then
    MIXER="pulse"
fi

USE_ALSA_NAME=1

function print_format {
    echo "$1" | envsubst '${SYMB}${VOL}${INDEX}${NAME}'
}

function print_block {
    ACTIVE=$(pacmd list-sinks | grep "state\: RUNNING" -B4 -A7 | grep "index:\|name:\|volume: front\|muted:")
    [ -z "$ACTIVE" ] && ACTIVE=$(pacmd list-sinks | grep "index:\|name:\|volume: front\|muted:" | grep -A3 '*')
    for name in INDEX NAME VOL MUTED; do
        read $name
    done < <(echo "$ACTIVE")
    INDEX=$(echo "$INDEX" | grep -o '[0-9]\+')
    VOL=$(echo "$VOL" | grep -o "[0-9]*%" | head -1 )
    VOL="${VOL%?}"

    NAME=$(echo "$NAME" | sed \
's/.*<.*\.\(.*\)>.*/\1/; t;'\
's/.*<\(.*\)>.*/\1/; t;'\
's/.*/unknown/')

    if [[ $USE_ALSA_NAME == 1 ]] ; then
        ALSA_NAME=$(pacmd list-sinks |\
awk '/^\s*\*/{f=1}/^\s*index:/{f=0}f' |\
grep "alsa.name\|alsa.mixer_name" |\
head -n1 |\
sed 's/.*= "\(.*\)".*/\1/')
        NAME=${ALSA_NAME:-$NAME}
    elif [[ $USE_DESCRIPTION == 1 ]] ; then
        DESCRIPTION=$(pacmd list-sinks |\
awk '/^\s*\*/{f=1}/^\s*index:/{f=0}f' |\
grep "device.description" |\
head -n1 |\
sed 's/.*= "\(.*\)".*/\1/')
        NAME=${DESCRIPTION:-$NAME}
    fi

    if [[ $MUTED =~ "no" ]] ; then
        SYMB=$AUDIO_HIGH_SYMBOL
        FORMAT=$FORMAT_NORMAL
        [[ $VOL -le $AUDIO_MED_THRESH ]] && SYMB=$AUDIO_MED_SYMBOL
        [[ $VOL -le $AUDIO_LOW_THRESH ]] && SYMB=$AUDIO_LOW_SYMBOL
        [[ $VOL -eq $AUDIO_ZERO_THRESH ]] && SYMB=$AUDIO_ZERO_SYMBOL
    else
        SYMB=$AUDIO_MUTED_SYMBOL
        FORMAT=$FORMAT_MUTED
    fi

    if [[ $SUBSCRIBE == 1 ]] ; then
        print_format "$FORMAT"
    else
        print_format "$FORMAT"
        echo "$COLOR"
    fi
}

print_block
if [[ $SUBSCRIBE == 1 ]] ; then
    while read -r EVENT; do
        print_block
    done < <(pactl subscribe | stdbuf -oL grep change)
fi
