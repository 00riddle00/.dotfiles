
##########
# GENERAL
##########

# vi mode in tmux
set-window-option -g mode-keys vi  
# This command will bring up a complete list of the vi-like 
# functionality available to you in copy mode:
# list-keys -T copy-mode-vi

# unbind C-b as prefix (do not use it)
unbind C-b

# set prefix to be '`'
set-option -g prefix `
bind ` send-prefix

# do not use ':' key
unbind ":" 

# bind 'o' to tmux command prompt
bind "o" command-prompt

# Bind to reload config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded"

# bind key to show tmux buffers
bind-key b list-buffers

# Scrollback buffer number of lines
set -g history-limit 100000                 

# No delay for escape key press
set -sg escape-time 0

# Use 256 colors
set -g default-terminal "screen-256color"   

####################
# COPY MODE
####################

bind-key -T copy-mode-vi v             send-keys -X begin-selection
# Rectangle select applies also while copying with MouseDragEnd1Pane, ie
# start selecting with mouse, then press "e"
bind-key -T copy-mode-vi e             send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Enter             send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# move x clipboard into tmux paste buffer
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# # move tmux copy buffer into x clipboard
#bind C-y run "tmux save-buffer - | xclip -i"

#bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; 

####################
# WINDOWS NAVIGATION
####################

# Windows navigation
bind h previous-window
bind l next-window

# Start window indexing at one instead of zero
set -g base-index 1

# Select window by its number or name
bind p command-prompt 'select-window -t %%'

# Show pane numbers 
unbind n
bind-key n 'display-panes'

# Select pane by its number
unbind m
bind m command-prompt 'select-pane -t %%'

# disable 'q' button
unbind q

############
# WIN NAMING
############

# rename current tmux window
bind e command-prompt 'rename-window %%'

set-option -g set-titles on
# Automatically set window title
set-window-option -g automatic-rename on
# Window title string (uses statusbar variables)
set -g set-titles-string '#T'

##############
# WIN ORDERING
##############

# prefix + "." applies this command:
# "move window -t %%"

# flag -r indicates this key may repeat
bind-key -r < swap-window -t -
bind-key -r > swap-window -t +

# tmux-ressurect save
# prefix + Ctrl-s 

# tmux-ressurect restore
# prefix + Ctrl-r 

###############
# WIN SPLITTING
###############

# Make new window/pane commands inherit the CWD:
# on new window
bind c new-window -c "#{pane_current_path}"
# on split window vertically
bind "'" split-window -h -c "#{pane_current_path}"
# on split window horizontally
bind - split-window -v -c "#{pane_current_path}"

################
# PANE SWITCHING
################

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Resize current pane:
# A little bit
bind-key -n M-Down resize-pane -D 
bind-key -n M-Up resize-pane -U
bind-key -n M-Left resize-pane -L
bind-key -n M-Right resize-pane -R
# A bigger resize difference
bind-key -n S-Down resize-pane -D 10
bind-key -n S-Up resize-pane -U 10
bind-key -n S-Left resize-pane -L 10 
bind-key -n S-Right resize-pane -R 10 


###############
# APPEARANCE
###############

##########################
# appearance by jasonwryan
# http://jasonwryan.com/
##########################

set -g status-style bg=black

# Statusbar if tmux runs in X
set -g status-style bright
set -g status-right-length 50
set -g status-left-length 50

# default window title colors
set-window-option -g window-status-style bg=default,fg=colour245,bright

# active window title colours
set-window-option -g window-status-current-style bg=default,fg=colour169,dim
#set-window-option -g window-status-current-style bg=default,fg=white,dim

# command/message line colors
set -g message-style fg=white,bg=black
set -g message-command-style fg=white,bg=black

set -g status-style bright
set -g status-right-length 40
set -g status-left-length 50

set -g status-left "#[fg=blue]#H #[fg=black,bright]• #[fg=green]#(uname -r) #[fg=black,bright]• #[fg=yellow]#(awk \'{print $1/1000}\' /sys/class/thermal/thermal_zone0/temp)°C #[fg=default]"
set -g status-right "#[fg=cyan]#(awkuptime) #[fg=black,bright]• #[fg=magenta]#(awk \'{print $1,$2,$3}\' /proc/loadavg)"

####################
# MOUSE
####################

# Mouse mode:
# Scroll your way into copy mode
# Click on pane to activate it
# Select windows with mouse
# Resize panes with mouse
set -g mouse on

####################
# PLUGINS
####################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
      
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
