




##########
# GENERAL
##########

setw -g mode-keys vi
set-window-option -g mode-keys vi  

unbind C-b

#set -g utf8 on                       # Enable utf-8


set-option -g prefix `
bind ` send-prefix

unbind ":" 
bind "o" command-prompt

# Bind to reload config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded"

# bind key to show tmux buffers
bind-key b list-buffers

set -g history-limit 100000                 # Scrollback buffer number of lines

# No delay for escape key press
set -sg escape-time 0

#set -g default-terminal "screen-256color"   # Use 256 colors

####################
# CONSOLE NAVIGATION
####################

unbind-key -t vi-copy v

bind-key -t vi-copy 'v' begin-selection # Begin selection in copy mode.
bind-key -t vi-copy 'C-v' rectangle-toggle # Begin selection in copy mode.
bind-key -t vi-copy 'y' copy-pipe "xclip -selection clipboard -i"
bind-key -t vi-copy Enter copy-pipe "xclip -selection clipboard -i"

# move x clipboard into tmux paste buffer
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# # move tmux copy buffer into x clipboard
#bind C-y run "tmux save-buffer - | xclip -i"


#bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; 

####################
# WINDOWS NAVIGATION
####################

bind h previous-window
bind l next-window

# Start window indexing at one instead of zero
set -g base-index 1

bind p command-prompt 'select-window -t %%'
unbind m
bind m command-prompt 'select-pane -t %%'

unbind n
unbind q
bind-key n 'display-panes'


############
# WIN NAMING
############

bind e command-prompt 'rename-window %%'

set-option -g set-titles on
# Automatically set window title
set-window-option -g automatic-rename on
# Window title string (uses statusbar variables)
set -g set-titles-string '#T'


###############
# WIN SPLITTING
###############

# Make new window/pane commands inherit the CWD
bind c new-window -c "#{pane_current_path}"
bind "'" split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

################
# PANE SWITCHING
################

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -n M-Down resize-pane -D 
bind-key -n M-Up resize-pane -U
bind-key -n M-Left resize-pane -L
bind-key -n M-Right resize-pane -R
bind-key -n S-Down resize-pane -D 10
bind-key -n S-Up resize-pane -U 10
bind-key -n S-Left resize-pane -L 10 
bind-key -n S-Right resize-pane -R 10 


###############
# CANDY
###############

set -g status-bg blue
set -g status-fg white

# Pane border colors
set -g pane-active-border-fg '#bbbbbb'
set -g pane-border-fg '#555555'

# Fancier status bar (needs 256-colour terminal support)
set -g status on
set -g status-bg colour235
set -g status-fg white
set -g status-left '#[fg=cyan]#H'
set -g status-right '#[fg=colour246]#(cat /proc/loadavg | cut -d" " -f1-3 | sed "s/ /, /g") #[fg=yellow]#(cat /sys/class/power_supply/BAT0/capacity)% #[fg=green]#(date "+%b %d %H:%M")'
set -g status-left-length 20
set -g status-right-length 40

# Highlight active window
set-window-option -g window-status-current-bg colour88


####################
# MOUSE
####################

# Just click it
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-option -g mouse-resize-pane on

# Scroll your way into copy mode
# set -g mode-mouse on
#set-option -g mouse on
set -g mouse on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
