# vim: filetype=i3


#  _ _____                    __ _
# (_)___ /    ___ ___  _ __  / _(_) __ _
# | | |_ \   / __/ _ \| '_ \| |_| |/ _` |
# | |___) | | (_| (_) | | | |  _| | (_| |
# |_|____/   \___\___/|_| |_|_| |_|\__, |
#                                  |___/

# This config file will use environmental variables such as $BROWSER and $TERMINAL.
# You can set these variables in ~/.profile or ~/.zshenv if you have it as below:
#
# export FILE=ranger
# export TERMINAL=urxvt

# Explanations
# [1](Being a command-line utility, i3-msg does not support startup notifications,
# hence the exec --no-startup-id.)
# [2] example in config file:
#           $run $term -name dropdown_math -e R -q
#     same command in terminal:
#           i3-msg 'exec --no-startup-id urxvt -name dropdown_math -e R -q'

# =============================
#  Basic Definitions
# =============================

set $term $TERMINAL 
set $run exec --no-startup-id 
set $mod Mod4
set $alt Mod1
set $esc Escape
set $ctrl Control
set $tab Tab
set $print Print
set $shutdown sudo shutdown -h now
set $reboot sudo reboot

floating_modifier $alt

# =============================
#  Startup
# =============================

$run $SHELL_SCRIPTS_DIR/config_monitors.sh
$run xscreensaver -no-splash
$run feh --bg-scale "$CANDY/images/desktop/arch0.jpg" 
$run dropbox
$run flameshot
$run dunst
$run picom -b
$run safeeyes
$run i3-msg 'workspace $ws1; $run $term -name t2'
$run $term -name dropdown_math -e R -q

# =============================
#  Appearance
# =============================

# GAP VARIABLES
# standard
# set $inner 8 
# set $outer 4
# set $top   0

# fancy
set $inner 30 
set $outer 0
set $top   5

for_window [class="^.*"] border pixel 1
border_radius 1
smart_borders on

gaps inner $inner
gaps outer $outer
gaps top   $top
# smart_gaps on     # gaps used if only more than one container on the workspace

set $arch_blue            #1793d1 
set $pretty_blue          #268bd2
set $another_blue         #47afdf
set $light_blue           #79bac1
set $bar_bg               #002b36
set $pretty_light_blue    #00afd7
set $aquamarine           #06989a
set $sea                  #bdced3

# statusbar
bar {
    font xft:SauceCodePro Nerd Font Bold 10
	status_command i3blocks
	position top
    tray_padding 5
    bindsym button4 nop
    bindsym button5 nop
    workspace_buttons yes
    strip_workspace_numbers no

  colors {
    separator   $pretty_blue
    background  $bar_bg
    statusline  $pretty_blue

    #                    border       bg          text    
    focused_workspace    $bar_bg      $bar_bg     $arch_blue
    inactive_workspace   $bar_bg      $bar_bg     #79bac1
    active_workspace     $bar_bg      $bar_bg     #ffffff
    urgent_workspace     $arch_blue   $arch_blue  #ffffff
    binding_mode         #b71c1c      #b71c1c     #000000
  }
}

# Colors
# class                    border         bg                    text            indicator
client.focused             $arch_blue     $pretty_light_blue    $light_blue     $arch_blue
# client.focused_inactive  $arch_blue     $arch_blue            $light_blue     $arch_blue
# client.unfocused         $arch_blue     $arch_blue            $light_blue     $arch_blue
# client.urgent            $arch_blue     $arch_blue            $light_blue     $arch_blue
# client.placeholder       $arch_blue     $arch_blue            $light_blue     $arch_blue

# =============================
#  Window traits 
# =============================

# Dropdown windows (the order can matter)
for_window [instance="dropdown_*"] floating enable
for_window [instance="dropdown_*"] move scratchpad
for_window [instance="dropdown_*"] sticky enable
for_window [instance="dropdown_math"] resize set 625 450
for_window [instance="dropdown_math"] border pixel 3
for_window [instance="dropdown_*"] move position center

for_window [title="GIMP Startup"] move workspace $ws5
for_window [class="Gimp"] move workspace $ws5

# =============================
#  Basic Bindings
# =============================

bindsym $mod+Return         $run $term

bindsym $mod+space          focus mode_toggle
bindsym $mod+Shift+space    floating toggle

bindsym $alt+$esc           kill

bindsym $print $run flameshot gui -p /home/riddle/Screenshots 
bindsym Shift+$print $run scrot /home/riddle/Screenshots/screenshot-%F-%H%M%S.png

# =============================
#  Letter Bindings
# =============================

bindsym $mod+c $run activate spotify
bindsym $mod+p $run activate pycharm
bindsym $mod+q $run activate code
bindsym $mod+Shift+d $run activate qbittorrent
bindsym $mod+m $run activate nomacs
bindsym $mod+o $run "keepass $DROPBOX/sync/keepass/8gb.kdbx"
bindsym $mod+f $run activate filezilla
bindsym $alt+e $run thunar
bindsym $mod+e $run wmctrl -a "File Manager"
bindsym $mod+g $run activate smartgit
bindsym $mod+semicolon $run activate libreoffice
# bindsym $mod+t $run tint2
# bindsym $mod+Shift+t $run killall tint2 

bindsym Insert $run dmenu_run
bindsym $mod+r $run $term -e $FILE
bindsym $mod+y $run $term -e calcurse -D ~/.config/calcurse
bindsym $mod+i $run $term -e htop
bindsym $mod+s $run xscreensaver-command --lock
bindsym $mod+b $run gimp

bindsym $mod+d $run i3showdesktop
bindsym $alt+q fullscreen disable

bindsym $mod+u [instance="dropdown_math"] scratchpad show; [instance="dropdown_math"] move position center
bindsym $alt+z sticky toggle
bindsym $mod+Shift+b bar mode toggle
bindsym $mod+Shift+t mode "$mode_gaps"

bindsym $mod+apostrophe split horizontal
bindsym $mod+slash split vertical

# enter fullscreen mode for the focused container
bindsym $mod+x fullscreen toggle

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e $run "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# resize focused window
bindsym $mod+Shift+u $run i3resize down
bindsym $mod+Shift+i $run i3resize up
bindsym $mod+Shift+o $run i3resize right
bindsym $mod+Shift+y $run i3resize left

# =============================
#  Workspace Bindings
# =============================

set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# ===================
#  Function Buttons
# ===================

bindsym $alt+F2 $run i3-msg '$run $term -name t2'
bindsym F2 $run i3-msg '$run wmctrl -x -a t2.URxvt'

bindsym $alt+F3 $run i3vimnotes
bindsym F3 $run i3-msg '$run wmctrl -x -a notes.URxvt'

bindsym F4 $run activate firefox
bindsym F5 $run subl3
bindsym F7 $run activate thunderbird
bindsym F9 $run activate $BROWSER
bindsym F10 $run activate qalculate-gtk
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym F12 restart
# restart picom (former compton)
bindsym $mod+F1 $run "killall picom && picom -b"

bindsym $mod+F5 $run "light -U 10"
bindsym $mod+F6 $run "light -A 10"
bindsym $mod+F11 $run "amixer set Master 10%- && pkill -RTMIN+1 i3blocks"
bindsym $mod+F12 $run "amixer set Master 10%+ && pkill -RTMIN+1 i3blocks"

# ===================
#  Arrow keys
# ===================

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# ===================
#  Media keys
# ===================

# Volume keys
bindsym $mod+plus		    $run amixer sset Master 5%+ && pkill -RTMIN+10 i3blocks
bindsym $mod+Shift+plus		$run amixer sset Master 15%+ && pkill -RTMIN+10 i3blocks
bindsym $mod+minus 		    $run amixer sset Master 5%- && pkill -RTMIN+10 i3blocks
bindsym $mod+Shift+minus	$run amixer sset Master 15%- && pkill -RTMIN+10 i3blocks
bindsym $mod+less 		    $run mpc prev
bindsym $mod+Shift+less		$run mpc seek 0%
bindsym $mod+greater		$run mpc next
bindsym $mod+Shift+greater	$run mpc next

# For advancing forward/backward in an mpd song
bindsym $mod+bracketleft 	      $run mpc seek -10
bindsym $mod+Shift+bracketleft 	  $run mpc seek -120
bindsym $mod+bracketright 	      $run mpc seek +10
bindsym $mod+Shift+bracketright   $run mpc seek +120

# ===================
#  Extra XF86 Keys
# ===================

bindsym XF86AudioRaiseVolume    $run "amixer set Master 10%+"
bindsym XF86AudioLowerVolume    $run "amixer set Master 10%-"
bindsym XF86TouchpadToggle      $run toggletouchpad
bindsym XF86TouchpadOn          $run synclient TouchpadOff=0
bindsym XF86TouchpadOff         $run synclient TouchpadOff=1
bindsym XF86MonBrightnessUp     $run "light -A 10 && pkill -RTMIN+2 i3blocks"
bindsym XF86MonBrightnessDown   $run "light -U 10 && pkill -RTMIN+2 i3blocks"
bindsym XF86RFKill              nop

# =============================
#  MODES 
# =============================

set $mode_gaps Toggle gaps: (1) on (2) off
mode "$mode_gaps" {
    bindsym 1 mode "default", gaps inner all set 8, gaps outer all set 4
    bindsym 2 mode "default", gaps inner all set 0, gaps outer all set 0
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

